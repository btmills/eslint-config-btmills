import { defineConfig } from 'eslint/config';

export default defineConfig({
	name: 'ES5',

	languageOptions: {
		ecmaVersion: 5,
		sourceType: 'script',
	},

	linterOptions: {
		reportUnusedDisableDirectives: true,
	},

	rules: {
		'no-alert': 'error',
		'no-array-constructor': 'error',
		'no-bitwise': 'error',
		'no-caller': 'error',
		'no-compare-neg-zero': 'off',
		'no-cond-assign': 'error',
		'no-console': 'off',
		'no-constant-binary-expression': 'error',
		'no-constant-condition': 'error',
		'no-continue': 'error',
		'no-control-regex': 'error',
		'no-debugger': 'error',
		'no-delete-var': 'error',
		'no-div-regex': 'error',
		'no-dupe-else-if': 'error',
		'no-dupe-keys': 'error',
		'no-dupe-args': 'error',
		'no-duplicate-case': 'error',
		'no-else-return': 'off',
		'no-empty': 'error',
		'no-empty-character-class': 'error',
		'no-empty-function': 'error',
		'no-eq-null': 'off',
		'no-eval': 'error',
		'no-ex-assign': 'error',
		'no-extend-native': 'error',
		'no-extra-bind': 'error',
		'no-extra-boolean-cast': 'error',
		'no-extra-label': 'off', // Covered by "no-labels"
		'no-fallthrough': ['error', { allowEmptyCase: true }],
		'no-func-assign': 'error',
		'no-global-assign': 'error',
		'no-implicit-coercion': 'off',
		'no-implicit-globals': 'error',
		'no-implied-eval': 'error',
		'no-inline-comments': 'off',
		'no-inner-declarations': ['error', 'functions'],
		'no-invalid-regexp': 'error',
		'no-invalid-this': 'off',
		'no-irregular-whitespace': 'error',
		'no-iterator': 'off',
		'no-label-var': 'off', // Covered by "no-labels"
		'no-labels': 'error',
		'no-lone-blocks': 'error',
		'no-lonely-if': 'off',
		'no-loop-func': 'error',
		'no-loss-of-precision': 'error',
		'no-magic-numbers': 'off',
		'no-misleading-character-class': 'error',
		'no-multi-assign': 'error',
		'no-multi-str': 'error',
		'no-negated-condition': 'off',
		'no-nested-ternary': 'off',
		'no-new': 'off',
		'no-new-func': 'error',
		'no-new-wrappers': 'error',
		'no-nonoctal-decimal-escape': 'error',
		'no-obj-calls': 'error',
		'no-object-constructor': 'error',
		'no-octal': 'error',
		'no-octal-escape': 'error',
		'no-param-reassign': 'error',
		'no-plusplus': 'off',
		'no-proto': 'error',
		'no-prototype-builtins': 'off',
		'no-redeclare': 'error',
		'no-regex-spaces': 'error',
		'no-restricted-globals': 'off',
		'no-restricted-properties': 'off',
		'no-restricted-syntax': 'off',
		'no-return-assign': 'error',
		'no-script-url': 'error',
		'no-self-assign': 'error',
		'no-self-compare': 'error',
		'no-sequences': 'error',
		'no-setter-return': 'error',
		'no-shadow': 'error',
		'no-shadow-restricted-names': 'off',
		'no-sparse-arrays': 'error',
		'no-ternary': 'off',
		'no-throw-literal': 'error',
		'no-undef': 'error',
		'no-undef-init': 'error',
		'no-undefined': 'error',
		'no-unexpected-multiline': 'error',
		'no-underscore-dangle': 'off',
		'no-unmodified-loop-condition': 'error',
		'no-unneeded-ternary': 'error',
		'no-unreachable': 'error',
		'no-unreachable-loop': 'error',
		'no-unsafe-finally': 'error',
		'no-unsafe-negation': 'error',
		'no-unused-expressions': 'error',
		'no-unused-labels': 'off', // Covered by "no-labels"
		'no-unused-vars': ['error', { vars: 'all', args: 'after-used' }],
		'no-use-before-define': 'off',
		'no-useless-assignment': 'error',
		'no-useless-backreference': 'error',
		'no-useless-call': 'error',
		'no-useless-catch': 'error',
		'no-useless-concat': 'error',
		'no-useless-escape': 'error',
		'no-useless-return': 'off',
		'no-void': 'off', // If we want to pass `undefined`, it's safer to use `void 0`.
		'no-var': 'off',
		'no-warning-comments': 'off',
		'no-with': 'error',

		'accessor-pairs': 'off',
		'array-callback-return': 'error',
		'block-scoped-var': 'off',
		camelcase: 'off',
		'capitalized-comments': 'off',
		complexity: ['error', 11],
		'consistent-return': 'error',
		'consistent-this': 'off',
		curly: ['error', 'multi-line'],
		'default-case': 'error',
		'default-case-last': 'error',
		'dot-notation': ['error', { allowKeywords: true }],
		eqeqeq: ['error', 'allow-null'],
		'for-direction': 'error',
		'func-name-matching': 'off',
		'func-names': 'off',
		'func-style': ['off', 'declaration'],
		'getter-return': 'error',
		'grouped-accessor-pairs': ['error', 'getBeforeSet'],
		'guard-for-in': 'error',
		'id-denylist': 'off',
		'id-length': 'off',
		'id-match': 'off',
		'init-declarations': 'off',
		'max-depth': 'off',
		'max-lines': 'off',
		'max-lines-per-function': 'off',
		'max-nested-callbacks': 'off',
		'max-params': 'off',
		'max-statements': 'off',
		'new-cap': 'error',
		'one-var': 'off',
		'operator-assignment': ['error', 'always'],
		'prefer-numeric-literals': 'error',
		'prefer-regex-literals': 'error',
		radix: 'error',
		'require-jsdoc': 'off',
		'require-yield': 'off',
		'sort-keys': 'off',
		'sort-vars': 'off',
		strict: 'error',
		'unicode-bom': 'error',
		'use-isnan': 'error',
		'valid-jsdoc': 'off',
		'valid-typeof': 'error',
		'vars-on-top': 'off',
		yoda: ['error', 'never', { exceptRange: true }],
	},
});
